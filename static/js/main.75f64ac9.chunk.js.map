{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","components/TodoHeader/index.js","redux/filterTypes.js","components/TodoFilters/index.js","redux/selectors.js","components/TodoProgress/index.js","components/TodoStats/index.js","components/TodoItem/index.js","components/TodoList/index.js","components/TodoApp/index.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["clearCompleted","type","TodoHeader","state","text","addTodo","e","preventDefault","_this","props","id","shortid","generate","isChecked","isVisible","setState","err","console","error","message","handleInput","target","value","react_default","a","createElement","className","onSubmit","this","TextField_default","label","margin","onChange","InputProps","autoComplete","Button_default","variant","color","Component","connect","todo","payload","ALL","COMPLETED","UNCOMPLETED","TodoFilters","filter","filters","handleFilter","event","filterTodos","_this$state","index_es","indicatorColor","textColor","classes","flexContainer","map","index","key","getTodosState","todos","getDealsLeftCount","length","getTodosLength","dealsLeft","dealsCount","switchComplete","isUncompleted","doneTodos","percent","toFixed","concat","size","thickness","onClick","removeTodo","editTodo","checkTodo","todoInput","React","createRef","checked","root","onBlur","disabled","ref","inpNode","current","select","visibleTodos","components_TodoItem","TodoApp","src","alt","components_TodoHeader","components_TodoList","components_TodoFilters","components_TodoProgress","components_TodoStats","initialState","combineReducers","_mutations","arguments","undefined","action","mutations","Object","defineProperty","objectSpread","toConsumableArray","item","_filters","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","theme","persistStore","createMuiTheme","typography","useNextVariants","palette","secondary","main","teal","App","es","styles","components_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.75f64ac9.chunk.js","sourcesContent":["import {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  EDIT_TODO,\r\n  CHECK_TODO,\r\n  FILTER_TODOS,\r\n  SWITCH_COMPLETE,\r\n  CLEAR_COMPLETED\r\n} from './actionTypes'\r\n\r\nexport const addTodo = todo => ({\r\n  type: ADD_TODO,\r\n  payload: { todo }\r\n})\r\n\r\nexport const removeTodo = id => ({\r\n  type: REMOVE_TODO,\r\n  payload: { id }\r\n})\r\n\r\nexport const editTodo = (id, text) => ({\r\n  type: EDIT_TODO,\r\n  payload: { id, text }\r\n})\r\n\r\nexport const checkTodo = id => ({\r\n  type: CHECK_TODO,\r\n  payload: { id }\r\n})\r\n\r\nexport const filterTodos = filter => ({\r\n  type: FILTER_TODOS,\r\n  payload: { filter }\r\n})\r\n\r\nexport const switchComplete = isUncompleted => ({\r\n  type: SWITCH_COMPLETE,\r\n  payload: { isUncompleted }\r\n})\r\n\r\nexport const clearCompleted = () => ({\r\n  type: CLEAR_COMPLETED\r\n})","export const ADD_TODO = 'ADD_TODO'\r\nexport const REMOVE_TODO = 'REMOVE_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'\r\nexport const CHECK_TODO = 'CHECK_TODO'\r\nexport const FILTER_TODOS = 'FILTER_TODOS'\r\nexport const SWITCH_COMPLETE = 'SWITCH_COMPLETE'\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\r\n","import React, { Component } from 'react'\r\nimport shortid from 'shortid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '@/redux/actions'\r\nimport './todo-header.scss'\r\n\r\nclass TodoHeader extends Component {\r\n  state = {\r\n    text: ''\r\n  }\r\n\r\n  addTodo = e => {\r\n    e.preventDefault()\r\n    if (!this.state.text) return\r\n\r\n    try {\r\n      this.props.addTodo({\r\n        id: shortid.generate(),\r\n        text: this.state.text,\r\n        isChecked: false,\r\n        isVisible: true\r\n      })\r\n    \r\n      this.setState({ text: '' })\r\n    } catch (err) {\r\n      console.error('Error while adding todo in list:', err.message);\r\n    }\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header className=\"todo__header\">\r\n        <form onSubmit={ this.addTodo } className=\"todo-form\">\r\n          <TextField\r\n            id=\"main-input\"\r\n            label=\"Input your deal\"\r\n            className=\"todo-form__input\"\r\n            margin=\"normal\"\r\n            value={ this.state.text }\r\n            onChange={ this.handleInput }\r\n            InputProps={{\r\n              autoComplete: \"off\"\r\n            }}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" className=\"todo-form__submit\" type=\"submit\">Add to list</Button>\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTodo })(TodoHeader)","export const ALL = 'All'\r\nexport const COMPLETED = 'Completed'\r\nexport const UNCOMPLETED = 'Uncompleted'","import React, { Component } from 'react'\r\nimport { Tab, Tabs } from '@material-ui/core'\r\nimport './todo-tabs.scss'\r\nimport { ALL, COMPLETED, UNCOMPLETED } from '@/redux/filterTypes'\r\nimport { connect } from 'react-redux'\r\nimport { filterTodos } from '@/redux/actions'\r\n\r\nclass TodoFilters extends Component {\r\n  state = {\r\n    filter: 'All',\r\n    filters: [ALL, COMPLETED, UNCOMPLETED]\r\n  }\r\n\r\n  handleFilter = (event, filter) => {    \r\n    this.setState({ filter })\r\n    this.props.filterTodos(filter)\r\n  }\r\n\r\n  render () {\r\n    const { filters, filter } = this.state\r\n\r\n    return (\r\n      <footer className=\"todo-footer\">\r\n        <Tabs\r\n          value={ filter }\r\n          onChange={ this.handleFilter }\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          className=\"todo-tabs\"\r\n          classes={{\r\n            flexContainer: 'todo-tabs__container'\r\n          }}\r\n        >\r\n          {filters.map((filter, index) =>\r\n            <Tab\r\n              key={ index }\r\n              value={ filter }\r\n              label={ filter }\r\n              className=\"todo-tabs__item\"\r\n            />\r\n          )}\r\n      </Tabs>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { filterTodos })(TodoFilters)\r\n","export const getTodosState = state => state.todos.todos\r\nexport const getDealsLeftCount = state => getTodosState(state).filter(todo => !todo.isChecked).length\r\nexport const getTodosLength = state => getTodosState(state).length\r\n","import React from 'react'\r\nimport { CircularProgress, Button } from '@material-ui/core/'\r\nimport './todo-progress.scss'\r\nimport { switchComplete } from '@/redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport { getDealsLeftCount, getTodosLength } from '@/redux/selectors'\r\n\r\nfunction TodoProgress(props) {\r\n  const { dealsLeft, dealsCount, switchComplete } = props\r\n\r\n  const doneTodos = dealsCount - dealsLeft\r\n  const percentage = doneTodos ? doneTodos * 100 / dealsCount : 0\r\n  const percent = +percentage.toFixed(1)\r\n\r\n  const isUncompleted = dealsLeft || !dealsCount\r\n\r\n  return (\r\n    <div className=\"todo-progress todo-info\">\r\n      <h2 className=\"prime-title\">Progress</h2>\r\n      <div className=\"todo-progressbar\">\r\n        <div className={ `todo-progressbar__text ${ isUncompleted ? '' : 'is-completed' }` }>{ percent } %</div>\r\n        <CircularProgress\r\n          value={ percent }\r\n          variant=\"static\"\r\n          size={ 80 }\r\n          thickness={ 5 }\r\n          className=\"todo-progressbar__circle\"\r\n          color={ isUncompleted ? 'primary' : 'secondary' }\r\n        />\r\n      </div>\r\n      <Button\r\n        color=\"primary\"\r\n        className=\"todo-controls__btn todo-info__btn\"\r\n        onClick={ () => switchComplete(!!isUncompleted) }\r\n      >\r\n        { isUncompleted ? 'complete all' : 'uncomplete all'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  dealsLeft: getDealsLeftCount(state),\r\n  dealsCount: getTodosLength(state)\r\n}), { switchComplete })(TodoProgress)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport './todo-stats.scss'\r\nimport { clearCompleted } from '@/redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport { getTodosLength, getDealsLeftCount } from '@/redux/selectors'\r\n\r\nfunction TodoStats (props) {\r\n  const { dealsCount, dealsLeft } = props\r\n\r\n  return (\r\n    <div className=\"todo-stats todo-info\">\r\n      <h3 className=\"prime-title\">Stats</h3>\r\n      <div className=\"todo-stats__field\">\r\n        <span className=\"todo-stats__label\">Deals:</span>\r\n        <span className=\"todo-stats__value\">{ dealsCount }</span>\r\n      </div>\r\n      <div className=\"todo-stats__field\">\r\n        <span className=\"todo-stats__label\">Deals left:</span>\r\n        <span className=\"todo-stats__value\">{ dealsLeft }</span>\r\n      </div>\r\n      <Button\r\n        className=\"todo-stats__btn todo-info__btn\"\r\n        onClick={ clearCompleted }\r\n      >\r\n        clear completed\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  dealsCount: getTodosLength(state),\r\n  dealsLeft: getDealsLeftCount(state)\r\n}), { clearCompleted })(TodoStats)\r\n","import React from 'react'\r\nimport { Checkbox, Icon, Button } from '@material-ui/core/'\r\nimport { connect } from 'react-redux'\r\nimport { removeTodo, editTodo, checkTodo } from '@/redux/actions'\r\nimport './todo-item.scss'\r\n\r\nfunction TodoItem (props) {\r\n  const todoInput = React.createRef()\r\n\r\n  const { todo, checkTodo, removeTodo, editTodo } = props\r\n  \r\n  const handleEdit = () => {\r\n    const inpNode = todoInput.current\r\n\r\n    inpNode.disabled = false\r\n    inpNode.select()\r\n  }\r\n\r\n  const id = todo.id\r\n\r\n  return (\r\n    <li className={`todo-item ${todo.isChecked ? 'is-checked': ''}`}>\r\n      <Checkbox\r\n        checked={ todo.isChecked }\r\n        onChange={ () => checkTodo(id) }\r\n        color=\"secondary\"\r\n        classes={{ root: \"todo-item__checkbox\" }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={ todo.text }\r\n        onChange={ e => editTodo(id, e.target.value) }\r\n        onBlur={ e => e.target.disabled = true }\r\n        disabled={ true }\r\n        className=\"todo-item__input\"\r\n        ref={ todoInput }\r\n      />\r\n      <Button\r\n        onClick={ handleEdit }\r\n        classes={{ root: \"todo-item__edit\" }}\r\n      >\r\n        <Icon classes={{ root: \"todo-item__edit-icon\" }}>edit</Icon>\r\n      </Button>\r\n      <Button\r\n        onClick={ () => removeTodo(id) }\r\n        classes={{ root: \"todo-item__remove\" }}\r\n      >\r\n        <Icon classes={{ root: \"todo-item__remove-icon\" }}>delete_forever</Icon>\r\n      </Button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default connect(null, {\r\n  removeTodo,\r\n  editTodo,\r\n  checkTodo\r\n})(TodoItem)\r\n","import React from 'react'\r\nimport TodoItem from '../TodoItem'\r\nimport { connect } from 'react-redux'\r\nimport { getTodosState } from '@/redux/selectors'\r\n\r\nfunction TodoList (props) {\r\n  const { todos } = props\r\n  const visibleTodos = todos.filter(todo => todo.isVisible)\r\n\r\n  return (\r\n    <section>\r\n      <ul>\r\n        { visibleTodos.map(todo => <TodoItem key={todo.id} todo={todo} />) }\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  todos: getTodosState(state)\r\n}))(TodoList)\r\n","import React from 'react'\r\nimport TodoHeader from '../TodoHeader'\r\nimport TodoFilters from '../TodoFilters'\r\nimport TodoProgress from '../TodoProgress'\r\nimport TodoStats from '../TodoStats'\r\nimport TodoList from '../TodoList'\r\nimport './todo.scss'\r\n\r\nfunction TodoApp() {\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo__head\">\r\n        <img className=\"todo__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\" alt=\"react logo\" />\r\n        <h1 className=\"todo__title\">Todo list created with React.js</h1>\r\n      </div>\r\n      <TodoHeader />\r\n      <TodoList />\r\n      <TodoFilters />\r\n      <TodoProgress />\r\n      <TodoStats />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoApp\r\n","import { ADD_TODO, REMOVE_TODO, EDIT_TODO, CHECK_TODO, FILTER_TODOS, SWITCH_COMPLETE, CLEAR_COMPLETED } from '../actionTypes'\r\nimport { ALL, COMPLETED, UNCOMPLETED } from '../filterTypes'\r\n\r\nconst initialState = {\r\n  todos: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  const { payload } = action\r\n  const { todos } = state\r\n\r\n  const mutations = {\r\n    [ADD_TODO]() {\r\n      const { todo } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: [...todos, todo]\r\n      }\r\n    },\r\n    [REMOVE_TODO]() {\r\n      const { id } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.filter(item => item.id !== id)\r\n      }\r\n    },\r\n    [EDIT_TODO]() {\r\n      const { id, text } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.map(item => item.id === id ? { ...item, text } : item)\r\n      }\r\n    },\r\n    [CHECK_TODO]() {\r\n      const { id } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.map(item =>  item.id === id ? { ...item, isChecked: !item.isChecked } : item)\r\n      }\r\n    },\r\n    [FILTER_TODOS]() {\r\n      const { filter } = payload\r\n\r\n      const filters = {\r\n        [ALL]: () => todos.map(todo => ({ ...todo, isVisible: true })),\r\n        [COMPLETED]: () => todos.map(todo => ({ ...todo, isVisible: todo.isChecked })),\r\n        [UNCOMPLETED]: () => todos.map(todo => ({ ...todo, isVisible: !todo.isChecked }))\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        todos: filters[filter]()\r\n      }\r\n    },\r\n    [SWITCH_COMPLETE]() {\r\n      const { isUncompleted } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.map(todo => ({...todo, isChecked: isUncompleted }))\r\n      }\r\n    },\r\n    [CLEAR_COMPLETED]() {\r\n      return {\r\n        ...state,\r\n        todos: todos.filter(todo => !todo.isChecked)\r\n      }\r\n    }\r\n  }\r\n  \r\n  return mutations[action.type] ? mutations[action.type]() : state\r\n}","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\n\r\nexport default combineReducers({ todos })\r\n","import { createStore } from \"redux\"\r\nimport rootReducer from \"./reducers\"\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = createStore(persistedReducer)\r\nexport const persistor = persistStore(store)\r\n","import ReactDOM from 'react-dom'\nimport React, { Component } from 'react'\nimport '@/styles/app.scss'\nimport TodoApp from './components/TodoApp'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\nimport teal from '@material-ui/core/colors/teal'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    secondary: { main: teal[500] } // Purple and green play nicely together.\n  }\n})\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <div className=\"app\">\n          <MuiThemeProvider theme={theme}>\n            <TodoApp />\n          </MuiThemeProvider>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}