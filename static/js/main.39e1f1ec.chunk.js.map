{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","components/TodoHeader/index.js","components/TodoItem/index.js","redux/filterTypes.js","components/TodoFilters/index.js","redux/selectors.js","components/TodoProgress/index.js","components/TodoStats/index.js","components/Todo/index.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["clearCompleted","type","TodoHeader","state","text","addTodo","e","preventDefault","_this","props","id","shortid","generate","isChecked","isVisible","setState","err","console","error","message","handleInput","target","value","react_default","a","createElement","className","onSubmit","this","TextField_default","label","margin","onChange","InputProps","autoComplete","Button_default","variant","color","Component","connect","todo","payload","removeTodo","editTodo","checkTodo","todoInput","React","createRef","concat","index_es","checked","classes","root","onBlur","disabled","ref","onClick","inpNode","current","select","ALL","COMPLETED","UNCOMPLETED","TodoFilters","filter","filters","handleFilter","event","filterTodos","_this$state","indicatorColor","textColor","flexContainer","map","index","key","getTodosState","todos","getDealsLeftCount","length","getTodosLength","dealsLeft","dealsCount","switchComplete","isUncompleted","doneTodos","percent","toFixed","size","thickness","TodoList","components_TodoItem","src","alt","components_TodoHeader","components_TodoFilters","components_TodoProgress","components_TodoStats","initialState","combineReducers","_mutations","arguments","undefined","action","mutations","Object","defineProperty","objectSpread","toConsumableArray","item","_filters","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","theme","persistStore","createMuiTheme","typography","useNextVariants","palette","secondary","main","teal","App","styles","components_Todo","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"mbAwCaA,EAAiB,iBAAO,CACnCC,KCnC6B,oBCEzBC,qNACJC,MAAQ,CACNC,KAAM,MAGRC,QAAU,SAAAC,GAER,GADAA,EAAEC,iBACGC,EAAKL,MAAMC,KAEhB,IACEI,EAAKC,MAAMJ,QAAQ,CACjBK,GAAIC,IAAQC,WACZR,KAAMI,EAAKL,MAAMC,KACjBS,WAAW,EACXC,WAAW,IAGbN,EAAKO,SAAS,CAAEX,KAAM,KACtB,MAAOY,GACPC,QAAQC,MAAM,mCAAoCF,EAAIG,aAI1DC,YAAc,SAAAd,GACZE,EAAKO,SAAS,CACZX,KAAME,EAAEe,OAAOC,iFAKjB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAChBH,EAAAC,EAAAC,cAAA,QAAME,SAAWC,KAAKvB,QAAUqB,UAAU,aACxCH,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEd,GAAG,aACHoB,MAAM,kBACNJ,UAAU,mBACVK,OAAO,SACPT,MAAQM,KAAKzB,MAAMC,KACnB4B,SAAWJ,KAAKR,YAChBa,WAAY,CACVC,aAAc,SAGlBX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAQY,QAAQ,YAAYC,MAAM,UAAUX,UAAU,oBAAoBzB,KAAK,UAA/E,wBA5CeqC,cAmDVC,cAAQ,KAAM,CAAElC,QFjDR,SAAAmC,GAAI,MAAK,CAC9BvC,KCXsB,WDYtBwC,QAAS,CAAED,WE+CED,CAA2BrC,kBCN3BqC,kBAAQ,KAAM,CAC3BG,WHvCwB,SAAAhC,GAAE,MAAK,CAC/BT,KCfyB,cDgBzBwC,QAAS,CAAE/B,QGsCXiC,SHnCsB,SAACjC,EAAIN,GAAL,MAAe,CACrCH,KCnBuB,YDoBvBwC,QAAS,CAAE/B,KAAIN,UGkCfwC,UH/BuB,SAAAlC,GAAE,MAAK,CAC9BT,KCvBwB,aDwBxBwC,QAAS,CAAE/B,SG0BE6B,CA/Cf,SAAmB9B,GACjB,IAAMoC,EAAYC,IAAMC,YAEhBP,EAA0C/B,EAA1C+B,KAAMI,EAAoCnC,EAApCmC,UAAWF,EAAyBjC,EAAzBiC,WAAYC,EAAalC,EAAbkC,SAS/BjC,EAAK8B,EAAK9B,GAEhB,OACEa,EAAAC,EAAAC,cAAA,MAAIC,UAAS,aAAAsB,OAAeR,EAAK3B,UAAY,aAAc,KACzDU,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,QAAUV,EAAK3B,UACfmB,SAAW,kBAAMY,EAAUlC,IAC3B2B,MAAM,YACNc,QAAS,CAAEC,KAAM,yBAEnB7B,EAAAC,EAAAC,cAAA,SACExB,KAAK,OACLqB,MAAQkB,EAAKpC,KACb4B,SAAW,SAAA1B,GAAC,OAAIqC,EAASjC,EAAIJ,EAAEe,OAAOC,QACtC+B,OAAS,SAAA/C,GAAC,OAAIA,EAAEe,OAAOiC,UAAW,GAClCA,UAAW,EACX5B,UAAU,mBACV6B,IAAMV,IAERtB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEO,QA3Ba,WACjB,IAAMC,EAAUZ,EAAUa,QAE1BD,EAAQH,UAAW,EACnBG,EAAQE,UAwBJR,QAAS,CAAEC,KAAM,oBAEjB7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAME,QAAS,CAAEC,KAAM,yBAAvB,SAEF7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEO,QAAU,kBAAMd,EAAWhC,IAC3ByC,QAAS,CAAEC,KAAM,sBAEjB7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAME,QAAS,CAAEC,KAAM,2BAAvB,sBC/CKQ,UAAM,OACNC,EAAY,YACZC,EAAc,cCKrBC,6MACJ5D,MAAQ,CACN6D,OAAQ,MACRC,QAAS,CAACL,EAAKC,EAAWC,MAG5BI,aAAe,SAACC,EAAOH,GACrBxD,EAAKO,SAAS,CAAEiD,WAChBxD,EAAKC,MAAM2D,YAAYJ,4EAGf,IAAAK,EACoBzC,KAAKzB,MAAzB8D,EADAI,EACAJ,QAASD,EADTK,EACSL,OAEjB,OACEzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACE3B,MAAQ0C,EACRhC,SAAWJ,KAAKsC,aAChBI,eAAe,UACfC,UAAU,UACV7C,UAAU,YACVyB,QAAS,CACPqB,cAAe,yBAGhBP,EAAQQ,IAAI,SAACT,EAAQU,GAAT,OACXnD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACE0B,IAAMD,EACNpD,MAAQ0C,EACRlC,MAAQkC,EACRtC,UAAU,+BA/BEY,aAwCXC,cAAQ,KAAM,CAAE6B,YLjBJ,SAAAJ,GAAM,MAAK,CACpC/D,KC3B0B,eD4B1BwC,QAAS,CAAEuB,aKeEzB,CAA+BwB,GC/CjCa,UAAgB,SAAAzE,GAAK,OAAIA,EAAM0E,MAAMA,QACrCC,EAAoB,SAAA3E,GAAK,OAAIyE,EAAczE,GAAO6D,OAAO,SAAAxB,GAAI,OAAKA,EAAK3B,YAAWkE,QAClFC,EAAiB,SAAA7E,GAAK,OAAIyE,EAAczE,GAAO4E,QCuC7CxC,kBAAQ,SAAApC,GAAK,MAAK,CAC/B8E,UAAWH,EAAkB3E,GAC7B+E,WAAYF,EAAe7E,KACzB,CAAEgF,ePTwB,SAAAC,GAAa,MAAK,CAC9CnF,KC/B6B,kBDgC7BwC,QAAS,CAAE2C,oBOIE7C,CAlCf,SAAsB9B,GAAO,IACnBwE,EAA0CxE,EAA1CwE,UAAWC,EAA+BzE,EAA/ByE,WAAYC,EAAmB1E,EAAnB0E,eAEzBE,EAAYH,EAAaD,EAEzBK,IADaD,EAAwB,IAAZA,EAAkBH,EAAa,GAClCK,QAAQ,GAE9BH,EAAgBH,IAAcC,EAEpC,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,0BAAAsB,OAA8BoC,EAAgB,GAAK,iBAAsBE,EAAvF,MACA/D,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACE3B,MAAQgE,EACRlD,QAAQ,SACRoD,KAAO,GACPC,UAAY,EACZ/D,UAAU,2BACVW,MAAQ+C,EAAgB,UAAY,eAGxC7D,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEZ,MAAM,UACNX,UAAU,oCACV8B,QAAU,kBAAM2B,IAAiBC,KAE/BA,EAAgB,eAAiB,4BCJ5B7C,kBAAQ,SAAApC,GAAK,MAAK,CAC/B+E,WAAYF,EAAe7E,GAC3B8E,UAAWH,EAAkB3E,KAC3B,CAAEH,kBAHSuC,CAxBf,SAAoB9B,GAAO,IACjByE,EAA0BzE,EAA1ByE,WAAYD,EAAcxE,EAAdwE,UAEpB,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAsBwD,IAExC3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,eACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAsBuD,IAExC1D,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEE,UAAU,iCACV8B,QAAUxD,GAFZ,6BCoBSuC,kBAAQ,SAAApC,GAAK,MAAK,CAC/B0E,MAAOD,EAAczE,KADRoC,CA/Bf,SAAc9B,GAAO,IACXoE,EAAUpE,EAAVoE,MAEFa,EACJnE,EAAAC,EAAAC,cAAA,UACGoD,EAAMJ,IAAI,SAAAjC,GAAI,OACbA,EAAK1B,UACHS,EAAAC,EAAAC,cAACkE,EAAD,CACEhB,IAAKnC,EAAK9B,GACV8B,KAAMA,IAEN,QAKV,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAakE,IAAI,qEAAqEC,IAAI,eACzGtE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,oCAEFH,EAAAC,EAAAC,cAACqE,EAAD,MACAvE,EAAAC,EAAAC,cAAA,WAASC,UAAU,cAAcgE,GACjCnE,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACwE,EAAD,oECjCAC,EAAe,CACnBrB,MAAO,ICDMsB,cAAgB,CAAEtB,MDIlB,WAAuC,IAAAuB,EAA9BjG,EAA8BkG,UAAAtB,OAAA,QAAAuB,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,EAAcK,EAAQF,UAAAtB,OAAA,EAAAsB,UAAA,QAAAC,EAC5C7D,EAAY8D,EAAZ9D,QACAoC,EAAU1E,EAAV0E,MAEF2B,GAASJ,EAAA,GAAAK,OAAAC,EAAA,EAAAD,CAAAL,ETXO,WSWP,WACA,IACH5D,EAASC,EAATD,KAER,OAAOiE,OAAAE,EAAA,EAAAF,CAAA,GACFtG,EADL,CAEE0E,MAAK,GAAA7B,OAAAyD,OAAAG,EAAA,EAAAH,CAAM5B,GAAN,CAAarC,QANTiE,OAAAC,EAAA,EAAAD,CAAAL,ETVU,cSUV,WASG,IACN1F,EAAO+B,EAAP/B,GAER,OAAO+F,OAAAE,EAAA,EAAAF,CAAA,GACFtG,EADL,CAEE0E,MAAOA,EAAMb,OAAO,SAAA6C,GAAI,OAAIA,EAAKnG,KAAOA,QAd/B+F,OAAAC,EAAA,EAAAD,CAAAL,ETTQ,YSSR,WAiBC,IACJ1F,EAAa+B,EAAb/B,GAAIN,EAASqC,EAATrC,KAEZ,OAAOqG,OAAAE,EAAA,EAAAF,CAAA,GACFtG,EADL,CAEE0E,MAAOA,EAAMJ,IAAI,SAAAoC,GAAI,OAAIA,EAAKnG,KAAOA,EAAZ+F,OAAAE,EAAA,EAAAF,CAAA,GAAsBI,EAAtB,CAA4BzG,SAASyG,QAtBrDJ,OAAAC,EAAA,EAAAD,CAAAL,ETRS,aSQT,WAyBE,IACL1F,EAAO+B,EAAP/B,GAER,OAAO+F,OAAAE,EAAA,EAAAF,CAAA,GACFtG,EADL,CAEE0E,MAAOA,EAAMJ,IAAI,SAAAoC,GAAI,OAAKA,EAAKnG,KAAOA,EAAZ+F,OAAAE,EAAA,EAAAF,CAAA,GAAsBI,EAAtB,CAA4BhG,WAAYgG,EAAKhG,YAAcgG,QA9B5EJ,OAAAC,EAAA,EAAAD,CAAAL,ETPW,eSOX,WAiCI,IAAAU,EACP9C,EAAWvB,EAAXuB,OAEFC,GAAO6C,EAAA,GAAAL,OAAAC,EAAA,EAAAD,CAAAK,EACVlD,EAAM,kBAAMiB,EAAMJ,IAAI,SAAAjC,GAAI,OAAAiE,OAAAE,EAAA,EAAAF,CAAA,GAAUjE,EAAV,CAAgB1B,WAAW,QAD3C2F,OAAAC,EAAA,EAAAD,CAAAK,EAEVjD,EAAY,kBAAMgB,EAAMJ,IAAI,SAAAjC,GAAI,OAAAiE,OAAAE,EAAA,EAAAF,CAAA,GAAUjE,EAAV,CAAgB1B,UAAW0B,EAAK3B,gBAFtD4F,OAAAC,EAAA,EAAAD,CAAAK,EAGVhD,EAAc,kBAAMe,EAAMJ,IAAI,SAAAjC,GAAI,OAAAiE,OAAAE,EAAA,EAAAF,CAAA,GAAUjE,EAAV,CAAgB1B,WAAY0B,EAAK3B,gBAHzDiG,GAMb,OAAOL,OAAAE,EAAA,EAAAF,CAAA,GACFtG,EADL,CAEE0E,MAAOZ,EAAQD,SA5CNyC,OAAAC,EAAA,EAAAD,CAAAL,ETNc,kBSMd,WA+CO,IACVhB,EAAkB3C,EAAlB2C,cAER,OAAOqB,OAAAE,EAAA,EAAAF,CAAA,GACFtG,EADL,CAEE0E,MAAOA,EAAMJ,IAAI,SAAAjC,GAAI,OAAAiE,OAAAE,EAAA,EAAAF,CAAA,GAASjE,EAAT,CAAe3B,UAAWuE,UApDtCqB,OAAAC,EAAA,EAAAD,CAAAL,ETLc,kBSKd,WAwDX,OAAOK,OAAAE,EAAA,EAAAF,CAAA,GACFtG,EADL,CAEE0E,MAAOA,EAAMb,OAAO,SAAAxB,GAAI,OAAKA,EAAK3B,gBA1DzBuF,GA+Df,OAAOI,EAAUD,EAAOtG,MAAQuG,EAAUD,EAAOtG,QAAUE,sBErEvD4G,EAAgB,CACpBpC,IAAK,OACLqC,kBAGIC,EAAmBC,YAAeH,EAAeI,GAE1CC,EAAQC,YAAYJ,GCH3BK,GDImBC,YAAaH,GCJxBI,yBAAe,CAC3BC,WAAY,CACVC,iBAAiB,GAEnBC,QAAS,CACPC,UAAW,CAAEC,KAAMC,IAAK,UAItBC,mLAEF,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuG,EAAA,iBAAD,CAAkBV,MAAOA,GACvB/F,EAAAC,EAAAC,cAACwG,EAAD,eALQ3F,aAYlB4F,IAASC,OACP5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAUhB,MAAOA,GACf7F,EAAAC,EAAAC,cAAC4G,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.39e1f1ec.chunk.js","sourcesContent":["import {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  EDIT_TODO,\r\n  CHECK_TODO,\r\n  FILTER_TODOS,\r\n  SWITCH_COMPLETE,\r\n  CLEAR_COMPLETED\r\n} from './actionTypes'\r\n\r\nexport const addTodo = todo => ({\r\n  type: ADD_TODO,\r\n  payload: { todo }\r\n})\r\n\r\nexport const removeTodo = id => ({\r\n  type: REMOVE_TODO,\r\n  payload: { id }\r\n})\r\n\r\nexport const editTodo = (id, text) => ({\r\n  type: EDIT_TODO,\r\n  payload: { id, text }\r\n})\r\n\r\nexport const checkTodo = id => ({\r\n  type: CHECK_TODO,\r\n  payload: { id }\r\n})\r\n\r\nexport const filterTodos = filter => ({\r\n  type: FILTER_TODOS,\r\n  payload: { filter }\r\n})\r\n\r\nexport const switchComplete = isUncompleted => ({\r\n  type: SWITCH_COMPLETE,\r\n  payload: { isUncompleted }\r\n})\r\n\r\nexport const clearCompleted = () => ({\r\n  type: CLEAR_COMPLETED\r\n})","export const ADD_TODO = 'ADD_TODO'\r\nexport const REMOVE_TODO = 'REMOVE_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'\r\nexport const CHECK_TODO = 'CHECK_TODO'\r\nexport const FILTER_TODOS = 'FILTER_TODOS'\r\nexport const SWITCH_COMPLETE = 'SWITCH_COMPLETE'\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\r\n","import React, { Component } from 'react'\r\nimport shortid from 'shortid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '@/redux/actions'\r\nimport './todo-header.scss'\r\n\r\nclass TodoHeader extends Component {\r\n  state = {\r\n    text: ''\r\n  }\r\n\r\n  addTodo = e => {\r\n    e.preventDefault()\r\n    if (!this.state.text) return\r\n\r\n    try {\r\n      this.props.addTodo({\r\n        id: shortid.generate(),\r\n        text: this.state.text,\r\n        isChecked: false,\r\n        isVisible: true\r\n      })\r\n    \r\n      this.setState({ text: '' })\r\n    } catch (err) {\r\n      console.error('Error while adding todo in list:', err.message);\r\n    }\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header className=\"todo__header\">\r\n        <form onSubmit={ this.addTodo } className=\"todo-form\">\r\n          <TextField\r\n            id=\"main-input\"\r\n            label=\"Input your deal\"\r\n            className=\"todo-form__input\"\r\n            margin=\"normal\"\r\n            value={ this.state.text }\r\n            onChange={ this.handleInput }\r\n            InputProps={{\r\n              autoComplete: \"off\"\r\n            }}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" className=\"todo-form__submit\" type=\"submit\">Add to list</Button>\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { addTodo })(TodoHeader)","import React from 'react'\r\nimport { Checkbox, Icon, Button } from '@material-ui/core/'\r\nimport { connect } from 'react-redux'\r\nimport { removeTodo, editTodo, checkTodo } from '@/redux/actions'\r\nimport './todo-item.scss'\r\n\r\nfunction TodoItem (props) {\r\n  const todoInput = React.createRef()\r\n\r\n  const { todo, checkTodo, removeTodo, editTodo } = props\r\n  \r\n  const handleEdit = () => {\r\n    const inpNode = todoInput.current\r\n\r\n    inpNode.disabled = false\r\n    inpNode.select()\r\n  }\r\n\r\n  const id = todo.id\r\n\r\n  return (\r\n    <li className={`todo-item ${todo.isChecked ? 'is-checked': ''}`}>\r\n      <Checkbox\r\n        checked={ todo.isChecked }\r\n        onChange={ () => checkTodo(id) }\r\n        color=\"secondary\"\r\n        classes={{ root: \"todo-item__checkbox\" }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={ todo.text }\r\n        onChange={ e => editTodo(id, e.target.value) }\r\n        onBlur={ e => e.target.disabled = true }\r\n        disabled={ true }\r\n        className=\"todo-item__input\"\r\n        ref={ todoInput }\r\n      />\r\n      <Button\r\n        onClick={ handleEdit }\r\n        classes={{ root: \"todo-item__edit\" }}\r\n      >\r\n        <Icon classes={{ root: \"todo-item__edit-icon\" }}>edit</Icon>\r\n      </Button>\r\n      <Button\r\n        onClick={ () => removeTodo(id) }\r\n        classes={{ root: \"todo-item__remove\" }}\r\n      >\r\n        <Icon classes={{ root: \"todo-item__remove-icon\" }}>delete_forever</Icon>\r\n      </Button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default connect(null, {\r\n  removeTodo,\r\n  editTodo,\r\n  checkTodo\r\n})(TodoItem)\r\n","export const ALL = 'All'\r\nexport const COMPLETED = 'Completed'\r\nexport const UNCOMPLETED = 'Uncompleted'","import React, { Component } from 'react'\r\nimport { Tab, Tabs } from '@material-ui/core'\r\nimport './todo-tabs.scss'\r\nimport { ALL, COMPLETED, UNCOMPLETED } from '@/redux/filterTypes'\r\nimport { connect } from 'react-redux'\r\nimport { filterTodos } from '@/redux/actions'\r\n\r\nclass TodoFilters extends Component {\r\n  state = {\r\n    filter: 'All',\r\n    filters: [ALL, COMPLETED, UNCOMPLETED]\r\n  }\r\n\r\n  handleFilter = (event, filter) => {    \r\n    this.setState({ filter })\r\n    this.props.filterTodos(filter)\r\n  }\r\n\r\n  render () {\r\n    const { filters, filter } = this.state\r\n\r\n    return (\r\n      <footer className=\"todo-footer\">\r\n        <Tabs\r\n          value={ filter }\r\n          onChange={ this.handleFilter }\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          className=\"todo-tabs\"\r\n          classes={{\r\n            flexContainer: 'todo-tabs__container'\r\n          }}\r\n        >\r\n          {filters.map((filter, index) =>\r\n            <Tab\r\n              key={ index }\r\n              value={ filter }\r\n              label={ filter }\r\n              className=\"todo-tabs__item\"\r\n            />\r\n          )}\r\n      </Tabs>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { filterTodos })(TodoFilters)\r\n","export const getTodosState = state => state.todos.todos\r\nexport const getDealsLeftCount = state => getTodosState(state).filter(todo => !todo.isChecked).length\r\nexport const getTodosLength = state => getTodosState(state).length\r\n","import React from 'react'\r\nimport { CircularProgress, Button } from '@material-ui/core/'\r\nimport './todo-progress.scss'\r\nimport { switchComplete } from '@/redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport { getDealsLeftCount, getTodosLength } from '@/redux/selectors'\r\n\r\nfunction TodoProgress(props) {\r\n  const { dealsLeft, dealsCount, switchComplete } = props\r\n\r\n  const doneTodos = dealsCount - dealsLeft\r\n  const percentage = doneTodos ? doneTodos * 100 / dealsCount : 0\r\n  const percent = +percentage.toFixed(1)\r\n\r\n  const isUncompleted = dealsLeft || !dealsCount\r\n\r\n  return (\r\n    <div className=\"todo-progress todo-info\">\r\n      <h2 className=\"prime-title\">Progress</h2>\r\n      <div className=\"todo-progressbar\">\r\n        <div className={ `todo-progressbar__text ${ isUncompleted ? '' : 'is-completed' }` }>{ percent } %</div>\r\n        <CircularProgress\r\n          value={ percent }\r\n          variant=\"static\"\r\n          size={ 80 }\r\n          thickness={ 5 }\r\n          className=\"todo-progressbar__circle\"\r\n          color={ isUncompleted ? 'primary' : 'secondary' }\r\n        />\r\n      </div>\r\n      <Button\r\n        color=\"primary\"\r\n        className=\"todo-controls__btn todo-info__btn\"\r\n        onClick={ () => switchComplete(!!isUncompleted) }\r\n      >\r\n        { isUncompleted ? 'complete all' : 'uncomplete all'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  dealsLeft: getDealsLeftCount(state),\r\n  dealsCount: getTodosLength(state)\r\n}), { switchComplete })(TodoProgress)\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport './todo-stats.scss'\r\nimport { clearCompleted } from '@/redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport { getTodosLength, getDealsLeftCount } from '@/redux/selectors'\r\n\r\nfunction TodoStats (props) {\r\n  const { dealsCount, dealsLeft } = props\r\n\r\n  return (\r\n    <div className=\"todo-stats todo-info\">\r\n      <h3 className=\"prime-title\">Stats</h3>\r\n      <div className=\"todo-stats__field\">\r\n        <span className=\"todo-stats__label\">Deals:</span>\r\n        <span className=\"todo-stats__value\">{ dealsCount }</span>\r\n      </div>\r\n      <div className=\"todo-stats__field\">\r\n        <span className=\"todo-stats__label\">Deals left:</span>\r\n        <span className=\"todo-stats__value\">{ dealsLeft }</span>\r\n      </div>\r\n      <Button\r\n        className=\"todo-stats__btn todo-info__btn\"\r\n        onClick={ clearCompleted }\r\n      >\r\n        clear completed\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  dealsCount: getTodosLength(state),\r\n  dealsLeft: getDealsLeftCount(state)\r\n}), { clearCompleted })(TodoStats)\r\n","import React from 'react'\r\nimport TodoHeader from '../TodoHeader'\r\nimport TodoItem from '../TodoItem'\r\nimport TodoFilters from '../TodoFilters'\r\nimport TodoProgress from '../TodoProgress'\r\nimport TodoStats from '../TodoStats'\r\nimport { connect } from 'react-redux'\r\nimport { getTodosState } from '@/redux/selectors'\r\nimport './todo.scss'\r\n\r\nfunction Todo(props) {\r\n  const { todos } = props\r\n\r\n  const TodoList = (\r\n    <ul>\r\n      {todos.map(todo =>\r\n        todo.isVisible ? (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n          />\r\n        ) : null\r\n      )}\r\n    </ul>\r\n  )\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo__head\">\r\n        <img className=\"todo__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\" alt=\"react logo\" />\r\n        <h1 className=\"todo__title\">Todo list created with React.js</h1>\r\n      </div>\r\n      <TodoHeader />\r\n      <section className=\"todo__body\">{TodoList}</section>\r\n      <TodoFilters />\r\n      <TodoProgress />\r\n      <TodoStats />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  todos: getTodosState(state)\r\n}))(Todo)\r\n","import { ADD_TODO, REMOVE_TODO, EDIT_TODO, CHECK_TODO, FILTER_TODOS, SWITCH_COMPLETE, CLEAR_COMPLETED } from '../actionTypes'\r\nimport { ALL, COMPLETED, UNCOMPLETED } from '../filterTypes'\r\n\r\nconst initialState = {\r\n  todos: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  const { payload } = action\r\n  const { todos } = state\r\n\r\n  const mutations = {\r\n    [ADD_TODO]() {\r\n      const { todo } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: [...todos, todo]\r\n      }\r\n    },\r\n    [REMOVE_TODO]() {\r\n      const { id } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.filter(item => item.id !== id)\r\n      }\r\n    },\r\n    [EDIT_TODO]() {\r\n      const { id, text } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.map(item => item.id === id ? { ...item, text } : item)\r\n      }\r\n    },\r\n    [CHECK_TODO]() {\r\n      const { id } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.map(item =>  item.id === id ? { ...item, isChecked: !item.isChecked } : item)\r\n      }\r\n    },\r\n    [FILTER_TODOS]() {\r\n      const { filter } = payload\r\n\r\n      const filters = {\r\n        [ALL]: () => todos.map(todo => ({ ...todo, isVisible: true })),\r\n        [COMPLETED]: () => todos.map(todo => ({ ...todo, isVisible: todo.isChecked })),\r\n        [UNCOMPLETED]: () => todos.map(todo => ({ ...todo, isVisible: !todo.isChecked }))\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        todos: filters[filter]()\r\n      }\r\n    },\r\n    [SWITCH_COMPLETE]() {\r\n      const { isUncompleted } = payload\r\n\r\n      return {\r\n        ...state,\r\n        todos: todos.map(todo => ({...todo, isChecked: isUncompleted }))\r\n      }\r\n    },\r\n    [CLEAR_COMPLETED]() {\r\n      return {\r\n        ...state,\r\n        todos: todos.filter(todo => !todo.isChecked)\r\n      }\r\n    }\r\n  }\r\n  \r\n  return mutations[action.type] ? mutations[action.type]() : state\r\n}","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\n\r\nexport default combineReducers({ todos })\r\n","import { createStore } from \"redux\"\r\nimport rootReducer from \"./reducers\"\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = createStore(persistedReducer)\r\nexport const persistor = persistStore(store)\r\n","import ReactDOM from 'react-dom'\nimport React, { Component } from 'react'\nimport '@/styles/app.scss'\nimport Todo from './components/Todo'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\nimport teal from '@material-ui/core/colors/teal'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    secondary: { main: teal[500] } // Purple and green play nicely together.\n  }\n})\n\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"app\">\n        <MuiThemeProvider theme={theme}>\n          <Todo />\n        </MuiThemeProvider>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}